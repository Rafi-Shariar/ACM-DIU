*** Basic Binary Search 

int binary_search(vector<int>&v, int target){

    int low = 0, high = v.size() - 1;

    while (low <= high)
    {
        int mid = low + (high - low ) / 2;

        if( v[ mid ] == target) return mid;
        else if ( v[ mid ] < target ) low = mid + 1;
        else high = mid - 1;
    }

    return -1;
    
}

-----------------------------------------------------------------------------------------------------------------------
***
# lower bound :  return smallest index such that arr[ i ] â‰¥ target , 
if the target is not present in the array then it will return the index = size + 1

   auto LB = lower_bound(v.begin(), v.end(), n) - v.begin();

 * int a range : auto LB2 = lower_bound(v.begin()+l, v.begin()+r, n) - v.begin();

# Upper Bound: returns smallest index such that arr[i] > target. 

-----------------------------------------------------------------------------------------------------------------------
